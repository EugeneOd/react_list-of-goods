{"version":3,"sources":["Components/GoodList/GoodList.js","App.js","index.js"],"names":["goodsFromServer","GoodsList","state","goods","selectedLength","select","Array","fill","map","item","index","key","value","reverse","setState","prev","sortAlphabetically","props","sort","a","b","localeCompare","sortByLength","length","reset","this","filter","type","onClick","onChange","e","target","React","Component","App","isToggleOn","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,eAAgB,GAHpB,EAMEC,OAAS,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACjC,4BACEC,IAAKF,EACLG,MAAOF,EAAQ,GAEdA,EAAQ,MAXf,EAeEG,QAAU,WACR,EAAKC,UAAS,SAAAC,GAAI,MAChB,CAAEZ,MAAO,YAAIY,EAAKZ,OAAOU,eAjB/B,EAqBEG,mBAAqB,WACnB,EAAKF,SAAS,CACZX,MAAO,YAAI,EAAKc,MAAMd,OAAOe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,SAvBlE,EA2BEE,aAAe,WACb,EAAKR,SAAS,CACZX,MAAO,YAAI,EAAKc,MAAMd,OAAOe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,aA7B/D,EAiCEC,MAAQ,WACN,EAAKV,SAAS,CACZX,MAAM,YAAK,EAAKc,MAAMd,OACtBC,eAAgB,KApCtB,uDAwCY,IAAD,OACYqB,KAAKvB,MAAhBG,OAER,OACE,6BACE,4BACGoB,KAAKvB,MAAMC,MACTuB,QAAO,SAAAjB,GAAI,OAAIA,EAAKc,QAAU,EAAKrB,MAAME,kBACzCI,KAAI,SAAAC,GAAI,OACP,wBAAIE,IAAKF,GAAOA,OAGtB,4BACEkB,KAAK,SACLC,QAASH,KAAKZ,SAFhB,WAMA,4BACEc,KAAK,SACLC,QAASH,KAAKT,oBAFhB,uBAMA,4BACEW,KAAK,SACLC,QAASH,KAAKD,OAFhB,SAMA,4BACEG,KAAK,SACLC,QAASH,KAAKH,cAFhB,kBAMA,4BACEO,SAAU,SAAAC,GAAC,OAAI,EAAKhB,SAAS,CAAEV,eAAgB0B,EAAEC,OAAOnB,UAEvDa,KAAKpB,aA/EhB,GAA+B2B,IAAMC,WCkBtBC,E,4MA7BbhC,MAAQ,CACNiC,YAAY,G,uDAGJ,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,qCACCX,KAAKvB,MAAMiC,WAER,kBAAC,EAAD,CACEhC,MAAOH,IAIT,4BACE2B,KAAK,SACLC,QAAS,kBACP,EAAKd,SAAS,CAAEqB,YAAY,MAHhC,c,GAhBMH,IAAMC,WCAxBI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e6f42b6c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class GoodsList extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    selectedLength: 1,\n  }\n\n  select = new Array(10).fill(0).map((item, index) => (\n    <option\n      key={item}\n      value={index + 1}\n    >\n      {index + 1}\n    </option>\n  ));\n\n  reverse = () => {\n    this.setState(prev => (\n      { goods: [...prev.goods].reverse() }\n    ));\n  }\n\n  sortAlphabetically = () => {\n    this.setState({\n      goods: [...this.props.goods].sort((a, b) => a.localeCompare(b)),\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      goods: [...this.props.goods].sort((a, b) => a.length - b.length),\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      goods: [...this.props.goods],\n      selectedLength: 1,\n    });\n  }\n\n  render() {\n    const { select } = this.state;\n\n    return (\n      <div>\n        <ul>\n          {this.state.goods\n            .filter(item => item.length >= this.state.selectedLength)\n            .map(item => (\n              <li key={item}>{item}</li>\n            ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        <select\n          onChange={e => this.setState({ selectedLength: e.target.value })}\n        >\n          {this.select}\n        </select>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList, goodsFromServer } from './Components/GoodList/GoodList';\n\nclass App extends React.Component {\n  state = {\n    isToggleOn: false,\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {this.state.isToggleOn\n          ? (\n            <GoodsList\n              goods={goodsFromServer}\n            />\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => (\n                this.setState({ isToggleOn: true })\n              )}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}